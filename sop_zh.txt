以下是专业且全面的软件包版本命名最佳实践文档：

---
📦 软件包版本命名最佳实践
概述
版本命名是软件生命周期管理的关键部分。它传达变更信息、稳定性和兼容性。本文档定义了软件项目中包版本命名的最佳实践，以确保一致性、清晰性和语义化含义。

---
1. 使用语义化版本（SemVer）
采用语义化版本 2.0.0 标准：
主版本号.次版本号.修订号

定义：
- 主版本号（MAJOR）：破坏性变更（不兼容的API变更）
- 次版本号（MINOR）：向后兼容的功能新增
- 修订号（PATCH）：向后兼容的问题修复

示例：
1.0.0 -> 1.0.1 (修复bug)
1.0.1 -> 1.1.0 (新增功能)
1.1.0 -> 2.0.0 (破坏性变更)

---
2. 适当时使用预发布标签
使用预发布标识符来标记不稳定版本：
1.0.0-alpha
1.0.0-beta
1.0.0-rc.1

常用标识符：
- alpha：早期不稳定版本，内部测试
- beta：功能完整但可能仍有bug
- rc："候选发布版"，除非发现重大问题否则可能稳定

排序：
SemVer将 1.0.0-alpha < 1.0.0-beta < 1.0.0-rc.1 < 1.0.0

---
3. 必要时包含构建元数据
为内部跟踪附加构建元数据：
1.0.0+build20250730

构建元数据不影响版本优先级。
仅用于内部CI/CD跟踪或可追溯性。

---
4. 维护严格的版本排序
避免可能误导或倒退排序的版本：
错误示例：
1.9 -> 1.10 -> 1.2  # 错误：1.2应该在1.9之前
2.0.0 -> 2.0.0-alpha  # 错误：预发布应该在正式版本之前

正确示例：
1.9.0 -> 1.10.0 -> 2.0.0
2.0.0-alpha -> 2.0.0-beta -> 2.0.0

---
5. 在版本控制系统（Git）中标记版本
始终为发布创建Git标签，使用版本号：
git tag v1.2.3
git push origin v1.2.3

使用v前缀遵循广泛接受的约定。

---
6. 版本递增指南
何时递增版本号：
- 主版本号：
  * 删除或修改现有API
  * 改变预期行为
  * 移除废弃功能
  
- 次版本号：
  * 添加新功能（向后兼容）
  * 废弃功能（但不移除）
  * 重大内部改进
  
- 修订号：
  * Bug修复
  * 安全补丁
  * 性能改进（不改变API）

---
7. LTS和遗留版本（可选）
对于长期支持分支，添加标识符：
2.3.4-lts
1.5.2-legacy

谨慎使用并清楚记录其支持生命周期。

---
8. 版本固定（消费者）
对于下游系统，遵循这些指南：
- 使用 ~1.2.3 获取修订版更新
- 使用 ^1.2.3 获取次版本和修订版更新
- 避免无界依赖（*, latest）

---
9. CI/CD集成
使用工具自动化版本管理：
- semantic-release
- 约定式提交（feat:, fix:）

示例：
feat(ui): 添加暗色模式切换
→ 触发版本递增到 1.1.0

---
10. 避免常见陷阱
- ❌ 不要使用时间戳作为版本号
- ❌ 不要任意跳过版本号
- ❌ 不要用版本号承载无关元数据

---
11. 版本管理与Git分支的耦合
为了确保代码分支和发布版本之间的清晰性和可追溯性，最好将版本策略与Git分支约定对齐。

🗂️ 分支命名约定
分支类型和对应的版本管理策略：
- main/master：稳定主分支
- dev/develop：开发分支
- feature/*：功能分支
- release/*：发布分支
- hotfix/*：热修复分支

---
🔢 按分支类型的版本管理
main → 稳定发布
- 使用官方SemVer版本号标记：
1.3.0
2.0.0

dev → 预发布/快照
- 使用带dev后缀的预发布标识符：
2.0.0-alpha
- 这些版本不应被视为稳定版本，仅用于内部QA/测试。

feature/* → 未发布实验
- 使用临时版本（不推送到注册表）：
1.3.0-feature-login
- 或简单使用来自dev的最新版本加元数据：
1.3.0-dev+login.20250730

避免标记feature/*分支，除非CI工作流需要。

release/* → 候选标签
- 使用发布候选标记：
2.0.0-rc.1
2.0.0-rc.2
- QA批准后提升到main。

hotfix/* → 修订版发布
- 基于main递增修订版本：
2.0.1
2.0.2

---
📦 各分支版本示例
分支              版本格式              示例
main/master      MAJOR.MINOR.PATCH     2.1.0, 3.0.0
dev/develop      X.Y.Z-alpha/beta      2.1.0-alpha, 2.1.0-beta
feature/*        X.Y.Z-feature-name    2.1.0-feature-auth
release/*        X.Y.Z-rc.N           2.1.0-rc.1, 2.1.0-rc.2
hotfix/*         X.Y.Z+1              2.1.1, 2.1.2 