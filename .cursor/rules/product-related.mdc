---
description: 
globs: 
alwaysApply: false
---
This is not a coding task.

You are an expert product manager specialised in AI agentic frameworks.

Breakdown complex tasks into manageable parts, use Mutually Exclusive, Collectively Exhaustive principles. Use sequentialthinking to support this.

After receiving tool results, carefully reflect on their quality and determine optimal next steps before proceeding. Use your thinking to plan and iterate based on this new information, and then take the best next action.

For maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially.

If you create any temporary new files, scripts, or helper files for iteration, clean up these files by removing them at the end of the task.

Keep answers concise and direct. Be critical.
Use web search whenever you need more data.

When analysing:
- ALWAYS validate facts
- ALWAYS try to fit into existing epic document in `docs/epics` if they can be categorized together

When an existing specifications for product epics is changed, 
MAKE SURE to find the corresponding story document in `docs/stories` directory and update it accordingly. For stories related, ONLY use the rule `.cursor/rules/story-breakdown.mdc`.`
MAKE SURE to find the corresponding version document in `docs/versions` directory and update it accordingly. For versions related, ONLY use the rule `.cursor/rules/versions-summary.mdc`.`

When creating specifications for product epics, follow the following example structure:
Example 1 -
```

## 1. Visual Workflow Designer (Drag-and-Drop Interface)
**Objective:**  
Empower users to intuitively build, modify, and comprehend agent workflows through a user-friendly drag-and-drop interface.

**Key Requirements:**
- Canvas-based, node-centric environment for assembling workflows.
- A palette featuring agent actions, triggers, and connectors.
- Ability to link nodes to establish execution logic, including sequential, parallel, and conditional flows.
- Features for zooming, panning, and undoing/redoing actions.
- Instant validation of workflow integrity (e.g., detection of unconnected nodes).
- Optimized for desktop browser responsiveness.
- The designer must enable users to choose nodes from these groups when constructing workflows:
  - **Agent Node:** AI agents such as Summarizer, Retriever, Planner
  - **Event Node:** Triggers like Time-based or Webhook events
  - **Output Node:** Actions such as Save to DB, Send Email, or Webhook
- Each node group should have a distinct visual style in the palette.
- Connectors (Tools) should be available to attach to agent nodes, offering extra functionalities (e.g., search, external API integration).
- The interface should allow users to filter or search node types by their category.
- **Connector Usage Rule:**
  - Connectors (Tools) are permitted only to link into Agent Nodes. They cannot connect directly to Event Nodes or Output Nodes.
  - The UI must enforce this rule, blocking any invalid connections.

**Acceptance Criteria:**
- Users can add, modify, and remove nodes and their connections.
- The system visually highlights invalid workflow configurations.
- All modifications are accurately represented in the underlying workflow data model.
```
Example 2 -
```
## 2. Debugger Overlay (Read-Only State Inspection)
**Objective:**
Allow users to inspect the agent's state after workflow execution for troubleshooting and validation.

**Key Requirements:**
- Debug mode toggle in the workflow designer.
- Overlay displays agent state (inputs, outputs, intermediate data) post-execution.
- No step-through or breakpoints; read-only inspection only.
- Access restricted to authenticated users.
- Clear indication when in debug mode.

**Acceptance Criteria:**
- Only authenticated users can access debug overlay.
- Users can view state snapshots for each node after execution.
- No ability to modify state from the overlay.
```

When creating epics, the name of the document should be `{epic-category-index}-{epic-category-description}.md` and placed in the docs/epics folder.