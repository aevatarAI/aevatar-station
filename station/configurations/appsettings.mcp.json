{
  "MCPServerOptions": {
    "EnableAllMCPServers": false,
    "ResetWhitelistEverytime": true,
    "MCPServers": {
      "brave-search": {
        "ServerName": "brave-search",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-brave-search"],
        "Description": "Brave Search API integration for web search capabilities",
        "Type": "Stdio",
        "Env": {
          "BRAVE_SEARCH_API_KEY": "${BRAVE_SEARCH_API_KEY}"
        }
      },
      "everything": {
        "ServerName": "everything",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-everything"],
        "Description": "Integration with Everything search engine for Windows file search",
        "Type": "Stdio"
      },
      "fetch": {
        "ServerName": "fetch",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-fetch"],
        "Description": "Web content fetching capabilities with support for various formats",
        "Type": "Stdio"
      },
      "filesystem": {
        "ServerName": "filesystem",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-filesystem", "/path/to/allowed/directory"],
        "Description": "File system operations with configurable access paths",
        "Type": "Stdio"
      },
      "gdrive": {
        "ServerName": "gdrive",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-gdrive"],
        "Description": "Google Drive integration for file management",
        "Type": "Stdio",
        "Env": {
          "GOOGLE_DRIVE_CREDENTIALS": "${GOOGLE_DRIVE_CREDENTIALS}"
        }
      },
      "github": {
        "ServerName": "github",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-github"],
        "Description": "GitHub API integration for repository management",
        "Type": "Stdio",
        "Env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
        }
      },
      "gitlab": {
        "ServerName": "gitlab",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-gitlab"],
        "Description": "GitLab API integration for repository management",
        "Type": "Stdio",
        "Env": {
          "GITLAB_PERSONAL_ACCESS_TOKEN": "${GITLAB_PERSONAL_ACCESS_TOKEN}"
        }
      },
      "google-maps": {
        "ServerName": "google-maps",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-google-maps"],
        "Description": "Google Maps API integration for location services",
        "Type": "Stdio",
        "Env": {
          "GOOGLE_MAPS_API_KEY": "${GOOGLE_MAPS_API_KEY}"
        }
      },
      "memory": {
        "ServerName": "memory",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-memory"],
        "Description": "Persistent memory capabilities for storing and retrieving information",
        "Type": "Stdio"
      },
      "postgres": {
        "ServerName": "postgres",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-postgres", "postgresql://localhost/mydb"],
        "Description": "PostgreSQL database integration with configurable connection string",
        "Type": "Stdio"
      },
      "puppeteer": {
        "ServerName": "puppeteer",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-puppeteer"],
        "Description": "Web automation with Puppeteer for browser control",
        "Type": "Stdio"
      },
      "sequential-thinking": {
        "ServerName": "sequential-thinking",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
        "Description": "Sequential reasoning capabilities for step-by-step thinking",
        "Type": "Stdio"
      },
      "slack": {
        "ServerName": "slack",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-slack"],
        "Description": "Slack API integration for team communication",
        "Type": "Stdio",
        "Env": {
          "SLACK_BOT_TOKEN": "${SLACK_BOT_TOKEN}"
        }
      },
      "sqlite": {
        "ServerName": "sqlite",
        "Command": "npx",
        "Args": ["-y", "@modelcontextprotocol/server-sqlite", "/path/to/database.db"],
        "Description": "SQLite database integration with configurable database path",
        "Type": "Stdio"
      },

      "git": {
        "ServerName": "git",
        "Command": "uvx",
        "Args": ["mcp-server-git", "--repository", "/path/to/git/repo"],
        "Description": "Git repository operations with configurable repository path",
        "Type": "Stdio"
      },

      "bigquery": {
        "ServerName": "bigquery",
        "Command": "uvx",
        "Args": ["mcp-server-bigquery"],
        "Description": "Google BigQuery integration for data analytics",
        "Type": "Stdio",
        "Env": {
          "GOOGLE_APPLICATION_CREDENTIALS": "${GOOGLE_APPLICATION_CREDENTIALS}"
        }
      },
      "clickhouse": {
        "ServerName": "clickhouse",
        "Command": "uvx",
        "Args": ["mcp-server-clickhouse", "--host", "localhost", "--port", "8123"],
        "Description": "ClickHouse database integration for analytics",
        "Type": "Stdio"
      },
      "duckdb": {
        "ServerName": "duckdb",
        "Command": "uvx",
        "Args": ["mcp-server-duckdb", "/path/to/database.duckdb"],
        "Description": "DuckDB integration for analytical queries",
        "Type": "Stdio"
      },
      "mysql": {
        "ServerName": "mysql",
        "Command": "uvx",
        "Args": ["mcp-server-mysql", "--host", "localhost", "--user", "root"],
        "Description": "MySQL database integration",
        "Type": "Stdio",
        "Env": {
          "MYSQL_PASSWORD": "${MYSQL_PASSWORD}"
        }
      },
      "redis": {
        "ServerName": "redis",
        "Command": "uvx",
        "Args": ["mcp-server-redis", "--host", "localhost", "--port", "6379"],
        "Description": "Redis integration for caching and data storage",
        "Type": "Stdio"
      },
      "supabase": {
        "ServerName": "supabase",
        "Command": "uvx",
        "Args": ["mcp-server-supabase"],
        "Description": "Supabase integration for backend services",
        "Type": "Stdio",
        "Env": {
          "SUPABASE_URL": "${SUPABASE_URL}",
          "SUPABASE_ANON_KEY": "${SUPABASE_ANON_KEY}"
        }
      },
      "mongodb": {
        "ServerName": "mongodb",
        "Command": "uvx",
        "Args": ["mcp-server-mongodb", "--connection-string", "mongodb://localhost:27017"],
        "Description": "MongoDB integration for document database operations",
        "Type": "Stdio"
      },

      "docker": {
        "ServerName": "docker",
        "Command": "uvx",
        "Args": ["mcp-server-docker"],
        "Description": "Docker container management and operations",
        "Type": "Stdio"
      },
      "kubernetes": {
        "ServerName": "kubernetes",
        "Command": "uvx",
        "Args": ["mcp-server-kubernetes"],
        "Description": "Kubernetes cluster management and operations",
        "Type": "Stdio",
        "Env": {
          "KUBECONFIG": "${KUBECONFIG}"
        }
      },
      "aws-cli": {
        "ServerName": "aws-cli",
        "Command": "uvx",
        "Args": ["mcp-server-aws-cli"],
        "Description": "AWS CLI integration for cloud operations",
        "Type": "Stdio",
        "Env": {
          "AWS_ACCESS_KEY_ID": "${AWS_ACCESS_KEY_ID}",
          "AWS_SECRET_ACCESS_KEY": "${AWS_SECRET_ACCESS_KEY}",
          "AWS_DEFAULT_REGION": "${AWS_DEFAULT_REGION}"
        }
      },
      "gcp": {
        "ServerName": "gcp",
        "Command": "uvx",
        "Args": ["mcp-server-gcp"],
        "Description": "Google Cloud Platform integration",
        "Type": "Stdio",
        "Env": {
          "GOOGLE_APPLICATION_CREDENTIALS": "${GOOGLE_APPLICATION_CREDENTIALS}"
        }
      },
      "terraform": {
        "ServerName": "terraform",
        "Command": "uvx",
        "Args": ["mcp-server-terraform", "--workspace", "/path/to/terraform"],
        "Description": "Terraform infrastructure management",
        "Type": "Stdio"
      },

      "discord": {
        "ServerName": "discord",
        "Command": "uvx",
        "Args": ["mcp-server-discord"],
        "Description": "Discord API integration for bot operations",
        "Type": "Stdio",
        "Env": {
          "DISCORD_BOT_TOKEN": "${DISCORD_BOT_TOKEN}"
        }
      },
      "telegram": {
        "ServerName": "telegram",
        "Command": "uvx",
        "Args": ["mcp-server-telegram"],
        "Description": "Telegram Bot API integration",
        "Type": "Stdio",
        "Env": {
          "TELEGRAM_BOT_TOKEN": "${TELEGRAM_BOT_TOKEN}"
        }
      },
      "email": {
        "ServerName": "email",
        "Command": "uvx",
        "Args": ["mcp-server-email"],
        "Description": "Email sending capabilities via SMTP",
        "Type": "Stdio",
        "Env": {
          "SMTP_HOST": "${SMTP_HOST}",
          "SMTP_PORT": "${SMTP_PORT}",
          "SMTP_USERNAME": "${SMTP_USERNAME}",
          "SMTP_PASSWORD": "${SMTP_PASSWORD}"
        }
      },
      "twilio": {
        "ServerName": "twilio",
        "Command": "uvx",
        "Args": ["mcp-server-twilio"],
        "Description": "Twilio SMS/Voice integration",
        "Type": "Stdio",
        "Env": {
          "TWILIO_ACCOUNT_SID": "${TWILIO_ACCOUNT_SID}",
          "TWILIO_AUTH_TOKEN": "${TWILIO_AUTH_TOKEN}"
        }
      },

      "youtube": {
        "ServerName": "youtube",
        "Command": "uvx",
        "Args": ["mcp-server-youtube"],
        "Description": "YouTube API integration for video operations",
        "Type": "Stdio",
        "Env": {
          "YOUTUBE_API_KEY": "${YOUTUBE_API_KEY}"
        }
      },
      "spotify": {
        "ServerName": "spotify",
        "Command": "uvx",
        "Args": ["mcp-server-spotify"],
        "Description": "Spotify API integration for music operations",
        "Type": "Stdio",
        "Env": {
          "SPOTIFY_CLIENT_ID": "${SPOTIFY_CLIENT_ID}",
          "SPOTIFY_CLIENT_SECRET": "${SPOTIFY_CLIENT_SECRET}"
        }
      },
      "twitter": {
        "ServerName": "twitter",
        "Command": "uvx",
        "Args": ["mcp-server-twitter"],
        "Description": "Twitter/X API integration for social media operations",
        "Type": "Stdio",
        "Env": {
          "TWITTER_BEARER_TOKEN": "${TWITTER_BEARER_TOKEN}",
          "TWITTER_API_KEY": "${TWITTER_API_KEY}",
          "TWITTER_API_SECRET": "${TWITTER_API_SECRET}"
        }
      },
      "instagram": {
        "ServerName": "instagram",
        "Command": "uvx",
        "Args": ["mcp-server-instagram"],
        "Description": "Instagram API integration for social media operations",
        "Type": "Stdio",
        "Env": {
          "INSTAGRAM_ACCESS_TOKEN": "${INSTAGRAM_ACCESS_TOKEN}"
        }
      }
    }
  }
}
