name: Test with code coverage

on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:
    types: [ opened, synchronize, reopened ]

env:
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  test-framework:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: chown (if needed)
        run: |
          if [ -d /home/runneradmin ]; then sudo chown -R $USER:$USER /home/runneradmin; fi
      - name: Install dependencies
        run: cd framework && dotnet restore --verbosity quiet
      - name: Build
        run: cd framework && dotnet build --no-restore /clp:ErrorsOnly /p:GeneratePackageOnBuild=false --verbosity quiet
      - name: Test
        run: |
          cd framework && dotnet test --no-restore --no-build --verbosity normal --logger trx --settings CodeCoverage.runsettings --results-directory ../coverage-framework --collect:"XPlat Code Coverage"
      - name: Upload framework coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-framework
          path: coverage-framework/
  test-signalr:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install dependencies
        run: cd signalR && dotnet restore --verbosity quiet
      - name: Build
        run: cd signalR && dotnet build --no-restore /clp:ErrorsOnly /p:GeneratePackageOnBuild=false --verbosity quiet
      - name: Test
        run: |
          cd signalR && dotnet test --no-restore --no-build --verbosity normal --logger trx --settings CodeCoverage.runsettings --results-directory ../coverage-signalr --collect:"XPlat Code Coverage"
      - name: Upload signalR coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-signalr
          path: coverage-signalr/
  test-station:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install dependencies
        run: cd station && dotnet restore --verbosity quiet
      - name: Build
        run: cd station && dotnet build --no-restore /clp:ErrorsOnly /p:GeneratePackageOnBuild=false --verbosity quiet
      - name: Test
        run: |
          cd station && dotnet test --no-restore --no-build --verbosity normal --logger trx --settings CodeCoverage.runsettings --results-directory ../coverage-station --collect:"XPlat Code Coverage"
      - name: Upload station coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-station
          path: coverage-station/
  test-gagents:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install dependencies
        run: cd gagents && dotnet restore AevatarGAgents.sln --verbosity quiet
      - name: Build
        run: cd gagents && dotnet build AevatarGAgents.sln --no-restore /clp:ErrorsOnly /p:GeneratePackageOnBuild=false --verbosity quiet
      - name: Test
        run: |
          cd gagents && dotnet test AevatarGAgents.sln --no-restore --no-build --verbosity normal --logger trx --settings CodeCoverage.runsettings --results-directory ../coverage-gagents --collect:"XPlat Code Coverage"
      - name: Upload gagents coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-gagents
          path: coverage-gagents/

  upload-coverage:
    runs-on: ubuntu-22.04
    needs: [test-framework, test-signalr, test-station, test-gagents]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download framework coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-framework
          path: coverage-framework/
      - name: Download signalR coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-signalr
          path: coverage-signalr/
      - name: Download station coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-station
          path: coverage-station/
      - name: Download gagents coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-gagents
          path: coverage-gagents/
      - name: Upload unified coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true # Set to true to expose errors
          directory: ./
          flags: unittests
          name: codecov-umbrella
          verbose: true # Detailed logging
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} 